name: Go CI

on:
  workflow_dispatch:
  push:
    paths:
      - 'subpub/**'
      - 'subscribeservice/**'
      - '.github/workflows/**'

env:
  REGISTRY: ghcr.io
  RL_IMAGE_NAME: k3sslerx/vktechnotest/subscribeservice

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ["subpub", "subscribeservice"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Install dependencies
        run: |
          export GO111MODULE=on
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run golangci-lint for ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: golangci-lint run --timeout 5m ./...

      - name: Run staticcheck for ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: staticcheck ./...

      - name: Run tests for ${{ matrix.module }}
        working-directory: ./${{ matrix.module }}
        run: go test -v -race -cover ./...

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./${{ matrix.module }}/.go-build
          key: ${{ runner.os }}-go-${{ matrix.module }}-${{ hashFiles('**/go.sum') }}
  build-and-push-subsservice:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: subscribeservice/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.RL_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.RL_IMAGE_NAME }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}